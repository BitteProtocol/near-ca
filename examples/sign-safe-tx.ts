import Safe from "@safe-global/protocol-kit";
import {
  provider,
  signHashedMessage,
  // signHashedMessage
} from "../src/chains/ethereum";
import { setupAccount } from "./setup";
import { ethers } from "ethers";
import { EthersAdapter } from "@safe-global/protocol-kit";
// https://github.com/safe-global/safe-core-sdk
// https://github.com/safe-global/safe-transaction-service

const run = async (): Promise<void> => {
  const sender = await setupAccount();
  const txData = {
    // from: sender,
    value: "0",
    to: "0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC",
    data: "0x0000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c3f2aac800c0000000000000000000000000008d99f8b2710e6a3b94d9bf465a98e5273069acbd000000000000000000000000004c00500000ad104d7dbd00e3ae0a5c00560c00000000000000000000000000244adf43a9241a5f7cffb2dbe6b7154a141940000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065f43d0f00000000000000000000000000000000000000000000000000000000661d0d7f0000000000000000000000000000000000000000000000000000000000000000360c6ebe000000000000000000000000000000000000000000952b1fa9b1b2d40000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f00000000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000a26b00c1f0df003000390027140000faa7190000000000000000000000000000000000000000000000000000000000000040e7314f427776c463dbb2a6c84ffa0cf13118fa86c18c3a0d45d63fb499b1b82d7f7932852085bdc963bcfa0dcdcd0dea66dbe25d2879263f797e7fa16ba7a55300000000360c6ebe",
  };

  const safeAddress = "0x345375b738CCb4d1dcC663F3Dd3Ff3907f4DD2fe";
  const ethAdapter = new EthersAdapter({ ethers, signerOrProvider: provider });
  // const safeService = new SafeApiKit({ chainId: 11155111n });
  const safeSdk = await Safe.create({
    ethAdapter,
    safeAddress,
    isL1SafeSingleton: true,
  });
  const safeTx = await safeSdk.createTransaction({ transactions: [txData] });
  console.log("SafeTx:", safeTx);
  const safeTxHash = await safeSdk.getTransactionHash(safeTx);
  console.log("safeTxHash:", safeTxHash);

  const signature = await signHashedMessage(txData, safeTxHash);
  console.log("Signed Transaction with signature", signature);
};

run();
